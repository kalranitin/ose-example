<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nitin</groupId>
	<version>1.0</version>
	<name>assignment</name>
	<artifactId>assignment</artifactId>
	<packaging>jar</packaging>

	<properties>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<java.version>1.8</java.version>
		<targetJdk>1.8</targetJdk>
		<jetty.version>8.1.10.v20130312</jetty.version>
		<glassfish.javax.version>2.2.3</glassfish.javax.version>
		<dw.version>0.6.2</dw.version>
		<guava.version>15.0</guava.version>
		<guice.version>4.0-beta5</guice.version>
		<jackson.version>2.4.4</jackson.version>
		<jersey.version>2.12</jersey.version>
		<serialization.version>2.2.2</serialization.version>
		<slf4j.version>1.7.5</slf4j.version>
		<metrics.version>3.0.1</metrics.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<!-- Dropwizard. This will pull in a suite of other libraries / frameworks, 
			such as JAX-RS, Jetty, etc. -->
		<dependency>
			<groupId>com.yammer.dropwizard</groupId>
			<artifactId>dropwizard-core</artifactId>
			<version>${dw.version}</version>
		</dependency>

		<!-- The Dropwizard JDBI module -->
		<dependency>
			<groupId>com.yammer.dropwizard</groupId>
			<artifactId>dropwizard-jdbi</artifactId>
			<version>${dw.version}</version>
		</dependency>
		<dependency>
			<groupId>com.yammer.dropwizard</groupId>
			<artifactId>dropwizard-db</artifactId>
			<version>${dw.version}</version>
		</dependency>

		
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<!-- For the ProxyServlet -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-websocket</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<!-- JSP Support -->
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>javax.servlet.jsp</artifactId>
			<version>${glassfish.javax.version}</version>
		</dependency>

		<!-- Various util libs -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>1.3.9</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-multibindings</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-servlet</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-guice</artifactId>
			<version>1.18</version>
		</dependency>
		<dependency>
			<groupId>com.mogwee</groupId>
			<artifactId>mogwee-executors</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>org.skife.config</groupId>
			<artifactId>config-magic</artifactId>
			<version>0.17</version>
		</dependency>
		
		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert-core</artifactId>
			<version>2.0M10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.yammer.dropwizard</groupId>
			<artifactId>dropwizard-testing</artifactId>
			<version>0.6.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>

		<!-- Build resources -->
		<resources>
			<resource> <!-- Main java source folder -->
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource> <!-- Resources folder -->
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>


		</resources>

		<!-- Test resources -->
		<testResources>
			<testResource>
				<filtering>false</filtering>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<filtering>false</filtering>
				<directory>src/test/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2</version>
				<configuration>
					<mainClass>com.nitin.StandaloneAppServer</mainClass>
				</configuration>
			</plugin>

			<!-- The maven app assembler plugin will generate a script that sets up 
				the classpath and runs your project -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.1.1</version>
				<configuration>
					<assembleDirectory>target</assembleDirectory>
					<programs>
						<program>
							<mainClass>com.nitin.StandaloneAppServer</mainClass>
							<name>webapp</name>
						</program>
					</programs>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.nitin.StandaloneAppServer</mainClass>
								</transformer>
							</transformers>
							<createDependencyReducedPom>true</createDependencyReducedPom>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
